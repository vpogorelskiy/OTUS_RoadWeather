//
// CurrentInfo.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
import AnyCodable
#endif

public struct CurrentInfo: Codable, JSONEncodable, Hashable {

    public var dt: Int?
    public var sunrise: Int?
    public var sunset: Int?
    public var temp: Double?
    public var feelsLike: Double?
    public var pressure: Int?
    public var humidity: Int?
    public var dewPoint: Double?
    public var uvi: Double?
    public var clouds: Int?
    public var visibility: Int?
    public var windSpeed: Double?
    public var windDeg: Int?
    public var windGust: Double?
    public var weather: [CurrentWeatherItem]?

    public init(dt: Int? = nil, sunrise: Int? = nil, sunset: Int? = nil, temp: Double? = nil, feelsLike: Double? = nil, pressure: Int? = nil, humidity: Int? = nil, dewPoint: Double? = nil, uvi: Double? = nil, clouds: Int? = nil, visibility: Int? = nil, windSpeed: Double? = nil, windDeg: Int? = nil, windGust: Double? = nil, weather: [CurrentWeatherItem]? = nil) {
        self.dt = dt
        self.sunrise = sunrise
        self.sunset = sunset
        self.temp = temp
        self.feelsLike = feelsLike
        self.pressure = pressure
        self.humidity = humidity
        self.dewPoint = dewPoint
        self.uvi = uvi
        self.clouds = clouds
        self.visibility = visibility
        self.windSpeed = windSpeed
        self.windDeg = windDeg
        self.windGust = windGust
        self.weather = weather
    }

    public enum CodingKeys: String, CodingKey, CaseIterable {
        case dt
        case sunrise
        case sunset
        case temp
        case feelsLike = "feels_like"
        case pressure
        case humidity
        case dewPoint = "dew_point"
        case uvi
        case clouds
        case visibility
        case windSpeed = "wind_speed"
        case windDeg = "wind_deg"
        case windGust = "wind_gust"
        case weather
    }

    // Encodable protocol methods

    public func encode(to encoder: Encoder) throws {
        var container = encoder.container(keyedBy: CodingKeys.self)
        try container.encodeIfPresent(dt, forKey: .dt)
        try container.encodeIfPresent(sunrise, forKey: .sunrise)
        try container.encodeIfPresent(sunset, forKey: .sunset)
        try container.encodeIfPresent(temp, forKey: .temp)
        try container.encodeIfPresent(feelsLike, forKey: .feelsLike)
        try container.encodeIfPresent(pressure, forKey: .pressure)
        try container.encodeIfPresent(humidity, forKey: .humidity)
        try container.encodeIfPresent(dewPoint, forKey: .dewPoint)
        try container.encodeIfPresent(uvi, forKey: .uvi)
        try container.encodeIfPresent(clouds, forKey: .clouds)
        try container.encodeIfPresent(visibility, forKey: .visibility)
        try container.encodeIfPresent(windSpeed, forKey: .windSpeed)
        try container.encodeIfPresent(windDeg, forKey: .windDeg)
        try container.encodeIfPresent(windGust, forKey: .windGust)
        try container.encodeIfPresent(weather, forKey: .weather)
    }
}

